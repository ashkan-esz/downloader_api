version: '3.4'

services:
  api:
    image: downloader-api
    depends_on:
      - redis
    #      - rabbitmq
    network_mode: host
    build:
      context: .
      dockerfile: ./Dockerfile.light
      network: host
    env_file: ./env/.env
    volumes:
      - .:/usr/app
      - ./db-backups:/db-backups
    environment:
      NODE_ENV: production
      REDIS_URL: redis://127.0.0.1:6379
      DISABLE_CRAWLER: 'false'
      DISABLE_TORRENT_CRAWLER: 'false'
      CRAWLER_CONCURRENCY: 6
      PAUSE_CRAWLER_ON_HIGH_LOAD: 'true'
      CRAWLER_TOTAL_MEMORY: 560
      CRAWLER_MEMORY_LIMIT: 520
      CRAWLER_PAUSE_DURATION_LIMIT: 10
      TOTAL_DISK_SPACE: 1024
      CORS_ALLOWED_ORIGINS: https://www.movietracker.site --- https://movietracker.site --- http://movietracker.site --- https://admin.movietracker.site --- http://admin.movietracker.site --- https://chat.movietracker.site
      DOMAIN: movietracker.site
    #    ports:
    #      - "3000:3000"
    deploy:
      resources:
        #also check --max_old_space_size in Dockerfile
        limits:
          cpus: "0.5"
          memory: 800M
        reservations:
          memory: 50M
    restart: always

  redis:
    image: "redis:7.2.3-alpine"
    network_mode: host
    env_file: ./env/.env
    environment:
      - ALLOW_EMPTY_PASSWORD=no
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL,CONFIG
      - USE_OPTIMIZATION=true
    #    ports:
    #      - "6379:6379"
    volumes:
      - redis:/data
    entrypoint: /bin/sh -c "redis-server --latency-monitor-threshold 100 --maxmemory 50mb --maxmemory-policy allkeys-lfu --save 60 1 --appendonly yes --requirepass $$REDIS_PASSWORD"
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: 50M
        reservations:
          memory: 10M
    restart: always

  telegrambot:
    image: ashkanaz2828/downloader_telegrambot
    network_mode: host
    depends_on:
      - api
    env_file: ./env/telegrambot.env
    environment:
      - API_URL=https://api.movietracker.site
      - CHAT_API_URL=https://chat.movietracker.site
      - WEB_URL=https://movietracker.site
      - MIN_IMDB_RATE=7.5
      - MIN_MAL_RATE=7.5
      - INITIAL_SLEEP_MINUTE=1
    #    volumes:
    #      - telegrambot
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: 70M
        reservations:
          memory: 10M
    restart: always

  adminpanel:
    image: ashkanaz2828/downloader_adminpanel
    network_mode: host
    depends_on:
      - api
      - torrent
    environment:
      - REACT_APP_BASE_URL=https://api.movietracker.site
      - REACT_APP_TORRENT_BASE_URL=https://download.movietracker.site
    #    ports:
    #      - "7070:7070"
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: 80M
        reservations:
          memory: 10M
    restart: unless-stopped

  website:
    image: ashkanaz2828/downloader_website
    network_mode: host
    depends_on:
      - api
    environment:
      - REACT_APP_BASE_URL=https://api.movietracker.site
    #    ports:
    #      - "9090:9090"
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: 80M
        reservations:
          memory: 10M
    restart: unless-stopped

  nginx:
    network_mode: host
    build: ./docker/nginx
    #    ports:
    #      - '80:80'
    depends_on:
      - api
      - chat
      - torrent
      - adminpanel
    deploy:
      resources:
        limits:
          cpus: "0.15"
          memory: 100M
        reservations:
          memory: 10M

  chat:
    image: ashkanaz2828/downloader_gochat
    depends_on:
      - redis
    #      - rabbitmq
    network_mode: host
    env_file: env/chatservice.env
    environment:
      PORT: 3002
      MAIN_SERVER_ADDRESS: api.movieTracker.site
      CORS_ALLOWED_ORIGINS: https://www.movietracker.site --- https://movietracker.site --- http://movietracker.site --- https://admin.movietracker.site --- http://admin.movietracker.site --- https://chat.movietracker.site
      LOG_PANIC_TRACE: 'true'
      DOMAIN: movietracker.site
      MALLOC_ARENA_MAX: 2
      BLURHASH_CONSUMER_COUNT: 1
    #    ports:
    #      - "3002:3002"
    deploy:
      resources:
        limits:
          cpus: "0.4"
          memory: 400M
        reservations:
          memory: 15M
    restart: always

  rabbitmq:
    image: rabbitmq
    network_mode: host
    hostname: rabbitmq
    container_name: my-rabbitmq
    build:
      context: ./docker/rabbitmq
      dockerfile: ./Dockerfile
      network: host
    env_file: env/chatservice.env
    environment:
      - PORT=5672
      #      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      #      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - RABBITMQ_ERLANG_COOKIE=unique-erlang-cookie
    #    ports:
    #      - "5672:5672"
    #      - "15672:15672"
    volumes:
      - rabbitmq:/var/lib/rabbitmq/
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: 200M
        reservations:
          memory: 50M
    restart: always

  torrent:
    image: ashkanaz2828/downloader_torrent
    network_mode: host
    env_file: env/torrentservice.env
    environment:
      PORT: 3003
      MAIN_SERVER_ADDRESS: api.movieTracker.site
      CORS_ALLOWED_ORIGINS: https://www.movietracker.site --- https://movietracker.site --- http://movietracker.site --- https://admin.movietracker.site --- http://admin.movietracker.site --- https://chat.movietracker.site --- https://download.movietracker.site
      LOG_PANIC_TRACE: 'true'
      DONT_CONVERT_MKV: 'true'
      DOMAIN: movietracker.site
    volumes:
      - ./downloads:/app/downloads
      - ./download_queue.json:/app/download_queue.json
    #    ports:
    #      - "3003:3003"
    deploy:
      resources:
        limits:
          cpus: "0.4"
          memory: 400M
        reservations:
          memory: 15M
    restart: always

  postgresDb:
    image: postgres:16.3-bookworm
    env_file: ./env/.env
    network_mode: host
    container_name: downloader_postgres
    environment:
      - POSTGRES_USER=postgres
      #      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=downloader
    #    ports:
    #      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./docker/postgres/postgresql-light.conf:/etc/postgresql/postgresql.conf
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    #    shm_size: '64mb'
    #    shm_size: '90mb'
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 300M
        reservations:
          memory: 40M
    restart: always

volumes:
  redis:
    driver: local
  rabbitmq:
    driver: local
  telegrambot:
    driver: local
  pgdata:
    driver: local